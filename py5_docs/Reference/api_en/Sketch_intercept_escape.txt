@@ meta
name = intercept_escape()
type = method
pclass = Sketch
processing_name = interceptEscape  # remove if not a part of Processing
category = structure
subcategory = None

@@ signatures
intercept_escape() -> None

@@ description
Prevent the Escape key from causing the Sketch to exit. Normally hitting the Escape key (`ESC`) will cause the Sketch to exit. In Processing, one can write code to change the Escape key's behavior by changing the [](sketch_key) value to something else, perhaps with code similar to `py5.key = 'x'`. That code won't work in py5 because py5 does not allow the user to alter the value of [](sketch_key) like Processing does. To allow users to achieve the same goal of preventing the `ESC` key from causing the Sketch to exit, the `intercept_escape()` method was created.

The `intercept_escape()` method will only do something when [](sketch_key) already equals `ESC`. This function should only be called from the user event functions `key_pressed()`, `key_typed()`, and `key_released()`.

This method will not alter the value of [](sketch_key). This method cannot prevent a Sketch from exiting when the Sketch window is closed.

@@ example
def setup():
    py5.size(200, 200)

def draw():
    py5.rect(py5.mouse_x, py5.mouse_y, 10, 10)

def key_pressed():
    if py5.key == py5.ESC:
        # this code will not work:
        # py5.key = 'x'

        py5.intercept_escape()

    # verify py5.key has not changed
    assert py5.key == py5.ESC
