@@ meta
name = text_width()
category = typography
subcategory = attributes
type = method
pclass = PApplet
processing_name = textWidth

@@ signatures
text_width(c: chr, /) -> float
text_width(chars: Iterator[chr], start: int, length: int, /) -> float
text_width(str: str, /) -> float

@@ variables
c: chr - the character to measure
chars: Iterator[chr] - the characters to measure
length: int - number of characters to measure
start: int - first character to measure
str: str - the String of characters to measure

@@ description
Calculates and returns the width of any character or text string.

@@ example
image = Sketch_text_width_0.png

def setup():
    py5.text_size(28)
    
    c = 't'
    cw = py5.text_width(c)
    py5.text(c, 0, 40)
    py5.line(cw, 0, cw, 50)

    s = "Tokyo"
    sw = py5.text_width(s)
    py5.text(s, 0, 85)
    py5.line(sw, 50, sw, 100)
