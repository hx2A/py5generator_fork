@@ meta
name = text()
category = typography
subcategory = loading_displaying
type = method
pclass = PApplet
processing_name = text

@@ signatures
text(c: chr, x: float, y: float, /) -> None
text(c: chr, x: float, y: float, z: float, /) -> None
text(chars: Sequence[chr], start: int, stop: int, x: float, y: float, /) -> None
text(chars: Sequence[chr], start: int, stop: int, x: float, y: float, z: float, /) -> None
text(num: float, x: float, y: float, /) -> None
text(num: float, x: float, y: float, z: float, /) -> None
text(num: int, x: float, y: float, /) -> None
text(num: int, x: float, y: float, z: float, /) -> None
text(str: str, x1: float, y1: float, x2: float, y2: float, /) -> None
text(str: str, x: float, y: float, /) -> None
text(str: str, x: float, y: float, z: float, /) -> None

@@ variables
c: chr - the alphanumeric character to be displayed
chars: Sequence[chr] - the alphanumberic symbols to be displayed
num: float - the numeric value to be displayed
num: int - the numeric value to be displayed
start: int - array index at which to start writing characters
stop: int - array index at which to stop writing characters
str: str - string to be displayed
x1: float - by default, the x-coordinate of text, see rectMode() for more info
x2: float - by default, the width of the text box, see rectMode() for more info
x: float - x-coordinate of text
y1: float - by default, the y-coordinate of text, see rectMode() for more info
y2: float - by default, the height of the text box, see rectMode() for more info
y: float - y-coordinate of text
z: float - z-coordinate of text

@@ description
Draws text to the screen. Displays the information specified in the first parameter on the screen in the position specified by the additional parameters. A default font will be used unless a font is set with the [](sketch_text_font) function and a default size will be used unless a font is set with [](sketch_text_size). Change the color of the text with the [](sketch_fill) function. The text displays in relation to the [](sketch_text_align) function, which gives the option to draw to the left, right, and center of the coordinates.

The `x2` and `y2` parameters define a rectangular area to display within and may only be used with string data. When these parameters are specified, they are interpreted based on the current [](sketch_rect_mode) setting. Text that does not fit completely within the rectangle specified will not be drawn to the screen.

Note that py5 lets you call `text()` without first specifying a Py5Font with [](sketch_text_font). In that case, a generic sans-serif font will be used instead. (See the third example.)

@@ example
image = Sketch_text_0.png

def setup():
    py5.text_size(32)
    py5.text("word", 10, 30)
    py5.fill(0, 102, 153)
    py5.text("word", 10, 60)
    py5.fill(0, 102, 153, 51)
    py5.text("word", 10, 90)

@@ example
image = Sketch_text_1.png

def setup():
    py5.size(100, 100, py5.P3D)
    py5.text_size(32)
    py5.fill(0, 102, 153, 204)
    py5.text("word", 12, 45, -30)  # specify a z-axis value
    py5.text("word", 12, 60)  # default depth, no z-value specified

@@ example
image = Sketch_text_2.png

def setup():
    s = "The quick brown fox jumps over the lazy dog."
    py5.fill(50)
    py5.text(s, 10, 10, 70, 80)  # text wraps within text box
